version: '3'

networks:
    waiting_for_conteiner:

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
    prometheus:
        image: prom/prometheus
        container_name: prometheus
        hostname: prometheus
        volumes:
            - ./prometheus:/etc/prometheus
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=200h'
            - '--web.enable-lifecycle'
        restart: unless-stopped
        networks:
            - waiting_for_conteiner
        ports:
            - 9090:9090
        labels:
            org.label-schema.group: 'monitoring'

    grafana:
        image: grafana/grafana
        container_name: grafana
        hostname: grafana
        restart: unless-stopped
        networks:
            - waiting_for_conteiner
        ports:
            - 3000:3000
        volumes:
            - grafana_data:/var/lib/grafana
            - ./grafana/provisioning:/etc/grafana/provisioning
        environment:
            - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
            - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
            - GF_USERS_ALLOW_SIGN_UP=false
            - GF_INSTALL_IMAGE_RENDERER_PLUGIN=true
            - GF_SERVER_DOMAIN=monitoring.corp.smartgroup.pro
            - GF_RENDERING_SERVER_URL=http://renderer:8081/render
            - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
            - GF_SNAPSHOTS_EXTERNAL_ENABLED=false
            - GF_SMTP_ENABLED=true
            - GF_INSTALL_PLUGINS=alexanderzobnin-zabbix-app,briangann-gauge-panel,btplc-trend-box-panel,jdbranham-diagram-panel
        labels:
            org.label-schema.group: 'monitoring'

    renderer:
        image: grafana/grafana-image-renderer:latest
        container_name: renderer
        hostname: renderer
        restart: unless-stopped
        networks:
            - waiting_for_conteiner
        ports:
            - 8081:8081
        environment:
            ENABLE_METRICS: 'true'

    nodeexporter:
        image: prom/node-exporter
        container_name: nodeexporter
        hostname: nodeexporter
        restart: unless-stopped
        networks:
            - waiting_for_conteiner
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
        ports:
            - 9100:9100
        labels:
            org.label-schema.group: 'monitoring'
